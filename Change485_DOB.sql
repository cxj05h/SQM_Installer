SELECT top 200 (epi_lastname + ', ' + epi_firstname) AS 'NAME',epi_id,epi_status,epi_mrnum,epi_mi,epi_startofepisode AS SOE,epi_EndOfEpisode AS EOE,epi_SocDate,CEBP_BENEFITPERIOD AS BP, epi_paid  ,epi_slid
FROM CLIENT_EPISODES_ALL  
JOIN CLIENT_EPISODE_BENEFIT_PERIOD ON cebp_epiid = epi_id 
where  ({names_clause})
order by 1, 6

select top 200 (epi_lastname + ', ' + epi_firstname) as 'NAME', epi_id, epi_paid, epi_status, LEFT (epi_mrnum, 3) AS 'BRANCH', epi_mi, EPI_SLID,ps_freq,
CONVERT(date, epi_STARTofepisode, 101) as SOE
,CONVERT(date, epi_ENDofepisode, 101) as EOE,
CONVERT(date, epi_SOCdate, 101) as SOC,CEBP_BENEFITPERIOD AS BP from CLIENT_EPISODES_ALL 
JOIN CLIENT_EPISODE_BENEFIT_PERIOD ON cebp_epiid = epi_id
JOIN client_episode_fs ON cefs_epiid = epi_id
join payor_sources on ps_id = cefs_psid
where epi_mrnum IN ({MRnum})
order by 2

--GETORDERS/Referral info
SELECT o.o_id, o.o_epiid, c485.epi_dob as DOB_on_485,ce.epi_dob as DOB_on_Referral, c485.epi_gender as Gender_on_485, ce.epi_gender as Gender_on_Referral,
        o.o_cevid, o.o_orderdate, 
       o.o_meddir, o.o_otid, ot.ot_desc, o.o_desc, 
       o.o_approvedby, o.o_dateapproved
FROM client_orders_all o
JOIN client_485 c485 ON o.o_id = c485.c485_oid  -- Assuming this is the correct join condition
JOIN ORDER_TYPES ot ON ot.OT_ID = o.O_OTID
JOIN CLIENT_EPISODES_ALL ce ON o.o_epiid = ce.epi_id 
WHERE o.o_epiID IN ({episode_id})
and o_otid in (30,1)
ORDER BY 4


SELECT CONCAT(cea.epi_lastname, ', ', cea.epi_firstname) AS patient_name,o_epiid, o_orderdate,CONVERT(date, cea.epi_StartOfEpisode) SOE, o_id,o_cevid,o_otid, o_nursedate,o_voidedby,o_declinedby,o_approvedby, o_dateapproved,o_physiciansigneddate,
o_meddirsigneddate,o.o_phid,o.o_primarysignedphid,  o.o_meddirsignedphid , o_sendtophysician,o_sendtomeddir,o_howsent,o_physiciansentdate,o_physicianexpecteddate, o_meddirhowsent,o_meddirsentdate,o_desc
FROM client_orders AS o
JOIN client_episodes_all AS cea ON o.o_epiid = cea.epi_id
WHERE o.o_id IN ({order_id})



BEGIN TRAN EDIT485

DECLARE  @ORDERID INT = {order_id}						-- ENTER THE ORDER ID HERE.
		,@EPIID INT = {episode_id}							-- ENTER THE EPISODE ID HERE.
		,@UPDATEDOB BIT = 1							-- 1 IF THE AGENCY REQUESTS TO UPDATE THE DOB.
		,@DATEOFBIRTH DATE = {Date} -- 7/4/1776			-- ENTER THE CORRECT DATE OF BIRTH HERE. IF THERE ARE NO CHANGES, PLEASE LEAVE AS '7/4/1776'.
		,@UPDATEGENDER BIT = 0						-- 1 IF THE AGENCY REQUESTS TO UPDATE THE GENDER.
		,@GENDER VARCHAR (50)= 'XXXX'				-- ENTER THE CORRECT GENDER HERE. IF THERE ARE NO CHANGES, PLEASE LEAVE AS IS. CURRENTLY THE ONLY AVAILABLE OPTIONS ARE 'MALE' AND 'FEMALE'.
		,@SECONDARY INT = 2							-- IF SECONDARY PROVIDED SET TO 2.
		,@COMMIT BIT = 0							-- 1 WILL COMMIT. 0 WILL ROLLBACK.


-- DO NOT EDIT BELOW THIS LINE--

DECLARE @VALIDATION BIT = 0
	   ,@ORDERTYPECHECK INT = (SELECT O_OTID FROM CLIENT_ORDERS WHERE O_ID = @ORDERID)
	   ,@ORDERSIGNED BIT = (CASE WHEN EXISTS(SELECT 1 FROM CLIENT_ORDERS CO WHERE CO.O_PHYSICIANSIGNEDDATE IS NULL AND CO.O_MEDDIRSIGNEDDATE IS NULL AND CO.O_ID = @ORDERID) THEN 0 ELSE 1 END)

BEGIN
	IF @SECONDARY !=2 
		BEGIN 
			SELECT 'SECONDARY REQUIRED' AS VALIDATION
			SET @COMMIT = 0
		END

	IF @UPDATEDOB = 0 AND @UPDATEGENDER = 0
		BEGIN
			SELECT 'PLEASE CHOOSE TO UPDATE EITHER THE DOB OR GENDER'
			SET @COMMIT = 0
		END

	IF @GENDER NOT IN (SELECT G_DESCRIPTION FROM GENDERS) AND @GENDER != 'XXXX'
		BEGIN
			SELECT 'PLEASE ENTER A VALID GENDER' AS VALIDATION
			SET @COMMIT = 0
		END

	IF @ORDERTYPECHECK NOT IN (1,30)
		BEGIN
			SET @COMMIT = 0
			SELECT 'THIS IS NOT A 485 OR POC - CONFIRM VARIABLES' AS VALIDATION
		END

	IF NOT EXISTS (SELECT 1 FROM CLIENT_ORDERS CO WHERE CO.O_EPIID = @EPIID AND CO.O_ID = @ORDERID)
		BEGIN	
			SET @COMMIT = 0
			SET @VALIDATION = 1
			SELECT 'THE ORDER ID IS NOT TIED TO THE EPISODE ID - CHECK VARIABLES' AS VALIDATION
		END

	IF @DATEOFBIRTH != (SELECT EPI_DOB FROM CLIENT_EPISODES CE WHERE CE.EPI_ID = @EPIID) AND @DATEOFBIRTH != '7/4/1776'
		BEGIN 
			SET @COMMIT = 0
			SET @VALIDATION = 1
			SELECT 'NEW DOB DOES NOT MATCH EPI_DOB IN THE REFERRAL' AS VALIDATION
			SELECT EPI_DOB AS [EPISODE DOB], @DATEOFBIRTH AS [VARIABLE PASTED] FROM CLIENT_EPISODES CE WHERE CE.EPI_ID = @EPIID
		END

	IF @DATEOFBIRTH = '7/4/1776' AND @GENDER LIKE '%XXXX%'
		BEGIN 
			SET @VALIDATION = 1
			SET @COMMIT = 0
			SELECT 'EITHER THE DOB OR GENDER NEED TO BE UPDATED' AS VALIDATION
		END
END


BEGIN
	IF @VALIDATION = 0 AND @UPDATEDOB = 1
			BEGIN 
				SELECT 'BEFORE' AS [PRE - CHANGE], EPI_DOB DOB FROM  CLIENT_485 WHERE  C485_OID = @ORDERID 

				UPDATE CLIENT_485
				SET EPI_DOB = @DATEOFBIRTH  
				WHERE C485_OID = @ORDERID

				SELECT 'AFTER' AS [POST - CHANGE], EPI_DOB DOB FROM  CLIENT_485 WHERE  C485_OID = @ORDERID
			END


	IF @VALIDATION = 0 AND @UPDATEGENDER = 1
			BEGIN 
				SELECT 'BEFORE' AS [PRE - CHANGE], EPI_GENDER FROM  CLIENT_485 WHERE  C485_OID = @ORDERID 

				UPDATE CLIENT_485
				SET EPI_GENDER = (SELECT G_DESCRIPTION FROM GENDERS WHERE G_DESCRIPTION = @GENDER)
				WHERE C485_OID = @ORDERID

				SELECT 'AFTER' AS [POST - CHANGE], EPI_GENDER FROM  CLIENT_485 WHERE  C485_OID = @ORDERID 
			END

	IF @ORDERSIGNED = 1
		BEGIN 
		   --THIS STATEMENT GRABS THE SIGNED DATES AND PLACES THEM IN A TEMP TABLE
			SELECT O_ID ORDERID, O_PHYSICIANSIGNEDDATE PSD,O_MEDDIRSIGNEDDATE MSD
			INTO #SIGNEDDATES 
			FROM CLIENT_ORDERS_ALL
			WHERE O_ID = @ORDERID

			--THIS UPDATE STATEMENT REMOVES SIGNATURES
			UPDATE CLIENT_ORDERS_ALL 
			SET O_PHYSICIANSIGNEDDATE = NULL, O_MEDDIRSIGNEDDATE = NULL
			WHERE O_ID = @ORDERID

			--THE UPDATE STATEMENT PLACES BACK SIGNED DATES
			UPDATE CLIENT_ORDERS_ALL 
			SET O_PHYSICIANSIGNEDDATE = #SIGNEDDATES.PSD, O_MEDDIRSIGNEDDATE = #SIGNEDDATES.MSD
			FROM CLIENT_ORDERS_ALL 
			JOIN #SIGNEDDATES ON #SIGNEDDATES.ORDERID = O_ID 
			WHERE O_ID = @ORDERID

			--DROPS THE TEMP TABLE
			DROP TABLE #SIGNEDDATES
		END
END	



IF @COMMIT = 1
		BEGIN
			COMMIT TRAN EDIT485
			SELECT 'COMMITTED'
		END

	ELSE
		BEGIN
			SELECT 'ROLLED BACK'
			ROLLBACK TRAN EDIT485
		END
